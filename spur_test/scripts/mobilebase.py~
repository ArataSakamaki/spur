#!/usr/bin/env python

import rospy
from geometry_msgs.msg import Twist
from std_msgs.msg import Float64
import tf

class MobileBase:
    def __init__(self):
        self.cmd_cb = rospy.Subscriber('cmd_vel', Twist, self.twist_cb)

        self.pub_br_r = rospy.Publisher("br_rotation_joint_position_controller/command",
                                        Float64, queue_size=1)
        self.pub_bl_r = rospy.Publisher("bl_rotation_joint_position_controller/command",
                                        Float64, queue_size=1)
        self.pub_fr_r = rospy.Publisher("fr_rotation_joint_position_controller/command",
                                        Float64, queue_size=1)
        self.pub_fl_r = rospy.Publisher("fl_rotation_joint_position_controller/command",
                                        Float64, queue_size=1)
        self.pub_br_w = rospy.Publisher("br_rotation_joint_velocity_controller/command",
                                        Float64, queue_size=1)
        self.pub_bl_w = rospy.Publisher("bl_rotation_joint_velocity_controller/command",
                                        Float64, queue_size=1)
        self.pub_fr_w = rospy.Publisher("fr_rotation_joint_velocity_controller/command",
                                        Float64, queue_size=1)
        self.pub_fl_w = rospy.Publisher("fl_rotation_joint_velocity_controller/command",
                                        Float64, queue_size=1)

    def twist_cb(self, msg):
        print 

if __name__ == "__main__":
    rospy.init_node('base_controller')
    MobileBase()
    rospy.spin()
